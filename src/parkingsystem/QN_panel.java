package parkingsystem;



import java.io.File;
import java.io.BufferedReader;
import java.io.FileReader;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;


public class QN_panel extends javax.swing.JFrame {
    
    
     private static QN_panel instance;
    private DefaultTableModel model;

    private QN_panel() {
        initComponents();
        model = new DefaultTableModel(new String[]{"Ticket Code", "Plate Number"}, 0);
    jTable1.setModel(model);

    jScrollPane1.getViewport().setOpaque(false);
    jTable1.setBorder(null);
    jTable1.setShowGrid(false);
    jScrollPane1.setBorder(null);
    jTable1.setFocusable(false);  
    jTable1.setRowSelectionAllowed(false);
    jTable1.setCellSelectionEnabled(false);                                                         
    nextTicketField.setOpaque(false);  
    nextTicketField.setBackground(new java.awt.Color(0,0,0,0)); 
    nextTicketField.setBorder(null);
    nextTicketField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

    // âœ… Center the text in all table cells
    javax.swing.table.DefaultTableCellRenderer centerRenderer = new javax.swing.table.DefaultTableCellRenderer();
    centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
    jTable1.setDefaultRenderer(Object.class, centerRenderer);

    // Load saved tickets from database file
    loadTicketsFromDatabase();
    }

    public static QN_panel getInstance() {
        if (instance == null) {
            instance = new QN_panel();
        }
        return instance;
    }

     // Load ticket codes from text file database
    private void loadTicketsFromDatabase() {
    try {
        File file = new File("src/DATABASE/QN_ticket.txt");
        if (!file.exists()) return; // If no file yet, skip

        BufferedReader br = new BufferedReader(new FileReader(file));
        String line;
        while ((line = br.readLine()) != null) {
            // Each line format: TicketCode | PlateNumber | TransactionNumber
            String[] parts = line.split("\\|");
            if (parts.length >= 2) {
                String ticketCode = parts[0].trim();
                String plateNumber = parts[1].trim();
                if (!ticketCode.isEmpty()) {
                    model.addRow(new Object[]{ ticketCode, plateNumber });
                }
            }
        }
        br.close();

        // If there are saved tickets, show the first one
        if (model.getRowCount() > 0) {
            nextTicketField.setText((String) model.getValueAt(0, 0));
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}
    
    
    // Add a new row to the table and update next ticket field
   public void addToQueue(String ticketCode, String plateNumber) {
    model.addRow(new Object[]{ ticketCode, plateNumber });

    // Show the first ticket in queue
    if (model.getRowCount() > 0) {
        nextTicketField.setText((String) model.getValueAt(0, 0));
    }
}

    


   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        nextTicketField = new javax.swing.JLabel();
        PIC = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(1500, 150, 0, 0));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setOpaque(false);

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TICKET CODE", "PLATE NUMBER"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setOpaque(false);
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 310, 350));

        nextTicketField.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        nextTicketField.setForeground(new java.awt.Color(255, 255, 255));
        nextTicketField.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nextTicketField.setText("jLabel1");
        getContentPane().add(nextTicketField, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 270, 90));

        PIC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SECOND_UI/2ND UI DATASTRUC.png"))); // NOI18N
        getContentPane().add(PIC, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 350, 700));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QN_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QN_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QN_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QN_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QN_panel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel PIC;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel nextTicketField;
    // End of variables declaration//GEN-END:variables

    void addParkingRow(String slot, String plate) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
